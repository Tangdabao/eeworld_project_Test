###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       29/Nov/2017  10:11:21
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Library\SDK_Eval_BlueNRG1\src\SDK_EVAL_Led.c
#    Command line =  
#        "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Library\SDK_Eval_BlueNRG1\src\SDK_EVAL_Led.c" -D
#        HS_SPEED_XTAL=HS_SPEED_XTAL_16MHZ -D
#        LS_SOURCE=LS_SOURCE_EXTERNAL_32KHZ -D SMPS_INDUCTOR=SMPS_INDUCTOR_10uH
#        --preprocess=cl "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2
#        DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        -lCN "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        -lb "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        --diag_suppress Pe1665 -o "D:\Program Files
#        (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\Obj"
#        --debug --endian=little --cpu=Cortex-M0 --diag_warning Pe1665
#        --diag_suppress Pe1665 -e --fpu=None --dlib_config
#        D:\Software\IAR_BlueNRG\arm\INC\c\DLib_Config_Normal.h -I "D:\Program
#        Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\BlueNRG1_Periph_Driver\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\CMSIS\Device\ST\BlueNRG1\Include\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\SDK_Eval_BlueNRG1\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\CMSIS\Include\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\hal\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\Bluetooth_LE\inc\"
#        -Ohz
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List\SDK_EVAL_Led.lst
#    Object file  =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\Obj\SDK_EVAL_Led.o
#
###############################################################################

D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK 2.5.0\Library\SDK_Eval_BlueNRG1\src\SDK_EVAL_Led.c
      1          /**
      2           * @file    SDK_EVAL_Led.c
      3           * @author  AMS VMA RF application team
      4           * @version V1.0.0
      5           * @date    September 29, 2015
      6           * @brief   This file provides all the low level API to manage LEDs for eval board.
      7           * @details
      8           *
      9           * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     10           * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     11           * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     12           * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     13           * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     14           * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     15           *
     16           * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
     17           * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
     18           * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     19           *
     20           * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
     21           */
     22          
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "SDK_EVAL_Led.h"
     26          
     27          
     28          /** @addtogroup SDK_EVAL_BlueNRG1           SDK EVAL BlueNRG1
     29           * @{
     30           */
     31          
     32          
     33          /** @addtogroup SDK_EVAL_Led                SDK EVAL Led
     34           * @{
     35           */
     36          
     37          /** @defgroup SDK_EVAL_Led_Private_TypesDefinitions             SDK EVAL Led Private Types Definitions
     38           * @{
     39           */
     40          
     41          /**
     42           * @}
     43           */
     44          
     45          
     46          /** @defgroup SDK_EVAL_Led_Private_Defines                      SDK EVAL Led Private Defines
     47           * @{
     48           */
     49          
     50          /**
     51           * @}
     52           */
     53          
     54          
     55          /** @defgroup SDK_EVAL_Led_Private_Macros                       SDK EVAL Led Private Macros
     56           * @{
     57           */
     58          
     59          /**
     60           * @}
     61           */
     62          
     63          
     64          /**
     65           * @defgroup SDK_EVAL_Led_Private_FunctionPrototypes            SDK EVAL Led Private Function Prototypes
     66           * @{
     67           */
     68          
     69          /**
     70           * @}
     71           */
     72          
     73          
     74          /**
     75           * @defgroup SDK_EVAL_Led_Private_Functions                     SDK EVAL Led Private Functions
     76           * @{
     77           */
     78          
     79          
     80          /**
     81           * @brief  Get the IO pin associate to the required LED
     82           * @param  xLed: LED name @ref SdkEvalLed
     83           *         This parameter can be one of following parameters:
     84           *         @arg LED1
     85           *         @arg LED2
     86           *         @arg LED3
     87           * @retval led_pin: IO pin name associated to that LED
     88           */

   \                                 In section .text, align 2, keep-with-next
     89          static uint32_t Get_LedGpioPin(SdkEvalLed xLed)
     90          {
   \                     Get_LedGpioPin: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     91            uint32_t led_pin;
     92            switch (xLed)
   \   00000002   0x....             LDR      R4,??DataTable0
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD010             BEQ      ??Get_LedGpioPin_0
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD007             BEQ      ??Get_LedGpioPin_1
   \   0000000C   0xD20D             BCS      ??Get_LedGpioPin_0
     93            {
     94              case(LED1):
     95                led_pin = SDK_EVAL_LED1_PIN;
     96                break;
     97              case(LED2):
     98                led_pin = SDK_EVAL_LED2_PIN;
   \   0000000E   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000012   0x210C             MOVS     R1,#+12
   \   00000014   0x4348             MULS     R0,R1,R0
   \   00000016   0x1820             ADDS     R0,R4,R0
   \   00000018   0x3808             SUBS     R0,R0,#+8
   \   0000001A   0xE00C             B        ??Get_LedGpioPin_2
     99                break;
    100              case(LED3):
    101                led_pin = SDK_EVAL_LED3_PIN;
   \                     ??Get_LedGpioPin_1: (+1)
   \   0000001C   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000020   0x210C             MOVS     R1,#+12
   \   00000022   0x4348             MULS     R0,R1,R0
   \   00000024   0x1820             ADDS     R0,R4,R0
   \   00000026   0x1F00             SUBS     R0,R0,#+4
   \   00000028   0xE005             B        ??Get_LedGpioPin_2
    102                break;
    103              default:
    104                led_pin = SDK_EVAL_LED1_PIN;
   \                     ??Get_LedGpioPin_0: (+1)
   \   0000002A   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000002E   0x210C             MOVS     R1,#+12
   \   00000030   0x4348             MULS     R0,R1,R0
   \   00000032   0x1820             ADDS     R0,R4,R0
   \   00000034   0x380C             SUBS     R0,R0,#+12
   \                     ??Get_LedGpioPin_2: (+1)
   \   00000036   0x6800             LDR      R0,[R0, #+0]
    105                break;
    106            }
    107            return (led_pin);
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
    108          }
    109          
    110          /**
    111           * @}
    112           */
    113          
    114          
    115          
    116          /**
    117           * @defgroup SDK_EVAL_Led_Public_Functions                SDK EVAL Led Public Functions
    118           * @{
    119           */
    120          
    121          
    122          /**
    123           * @brief  Configures LEDs.
    124           * @param  xLed Specifies the Led to be configured @ref SdkEvalLed.
    125           *         This parameter can be one of following parameters:
    126           *         @arg LED1
    127           *         @arg LED2
    128           *         @arg LED3
    129           * @retval None.
    130           */

   \                                 In section .text, align 2, keep-with-next
    131          void SdkEvalLedInit(SdkEvalLed xLed)
    132          {
   \                     SdkEvalLedInit: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    133            GPIO_InitType GPIO_InitStructure;
    134            
    135            /* Enable the GPIO Clock */
    136            SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_GPIO, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       SysCtrl_PeripheralClockCmd
    137            
    138            /* Configure the LED pin */
    139            GPIO_InitStructure.GPIO_Pin = Get_LedGpioPin(xLed);
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       Get_LedGpioPin
   \   00000012   0x9000             STR      R0,[SP, #+0]
    140            GPIO_InitStructure.GPIO_Mode = GPIO_Output;
   \   00000014   0x4668             MOV      R0,SP
   \   00000016   0x2106             MOVS     R1,#+6
   \   00000018   0x7101             STRB     R1,[R0, #+4]
    141            GPIO_InitStructure.GPIO_Pull = ENABLE;
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x7181             STRB     R1,[R0, #+6]
    142            GPIO_InitStructure.GPIO_HighPwr = ENABLE;
   \   0000001E   0x7141             STRB     R1,[R0, #+5]
    143            GPIO_Init(&GPIO_InitStructure);
   \   00000020   0x.... 0x....      BL       GPIO_Init
    144          
    145            /* Put the LED off */
    146            SdkEvalLedOff(xLed);
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x.... 0x....      BL       SdkEvalLedOff
    147          }
   \   0000002A   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    148          
    149          /**
    150           * @brief  Turns selected LED On.
    151           * @param  xLed Specifies the Led to be set on  @ref SdkEvalLed.
    152           *         This parameter can be one of following parameters:
    153           *         @arg LED1
    154           *         @arg LED2
    155           *         @arg LED3
    156           * @retval None.
    157           */

   \                                 In section .text, align 2, keep-with-next
    158          void SdkEvalLedOn(SdkEvalLed xLed)
    159          {
   \                     SdkEvalLedOn: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    160             GPIO_WriteBit(Get_LedGpioPin(xLed), LED_ON);
   \   00000002   0x.... 0x....      BL       Get_LedGpioPin
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x.... 0x....      BL       GPIO_WriteBit
    161          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    162          
    163          /**
    164           * @brief  Turns selected LED Off.
    165           * @param  xLed Specifies the Led to be set off @ref SdkEvalLed.
    166           *         This parameter can be one of following parameters:
    167           *         @arg LED1
    168           *         @arg LED2
    169           *         @arg LED3
    170           * @retval None.
    171           */

   \                                 In section .text, align 2, keep-with-next
    172          void SdkEvalLedOff(SdkEvalLed xLed)
    173          {
   \                     SdkEvalLedOff: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    174             GPIO_WriteBit(Get_LedGpioPin(xLed), LED_OFF);
   \   00000002   0x.... 0x....      BL       Get_LedGpioPin
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      BL       GPIO_WriteBit
    175          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    176          
    177          /**
    178           * @brief  Toggles the selected LED.
    179           * @param  xLed Specifies the Led to be toggled @ref SdkEvalLed.@ref SdkEvalLed.
    180           *         This parameter can be one of following parameters:
    181           *         @arg LED1
    182           *         @arg LED2
    183           *         @arg LED3
    184           * @retval None.
    185           */

   \                                 In section .text, align 2, keep-with-next
    186          void SdkEvalLedToggle(SdkEvalLed xLed)
    187          {
   \                     SdkEvalLedToggle: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    188            GPIO_ToggleBits(Get_LedGpioPin(xLed));
   \   00000002   0x.... 0x....      BL       Get_LedGpioPin
   \   00000006   0x.... 0x....      BL       GPIO_ToggleBits
    189          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    190          
    191          /**
    192           * @brief  Returns the status of a specified led.
    193           * @param  xLed Specifies the Led to be read @ref SdkEvalLed.
    194           *         This parameter can be one of following parameters:
    195           *         @arg LED1
    196           *         @arg LED2
    197           *         @arg LED3
    198           * @retval FlagStatus: status of the LED @ref FlagStatus
    199           *         This parameter can be: SET or RESET.
    200           */

   \                                 In section .text, align 2, keep-with-next
    201          FlagStatus SdkEvalLedGetState(SdkEvalLed xLed)
    202          {
   \                     SdkEvalLedGetState: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    203            if(GPIO_ReadBit(Get_LedGpioPin(xLed)))
   \   00000002   0x.... 0x....      BL       Get_LedGpioPin
   \   00000006   0x.... 0x....      BL       GPIO_ReadBit
   \   0000000A   0x1E40             SUBS     R0,R0,#+1
   \   0000000C   0x4180             SBCS     R0,R0,R0
   \   0000000E   0x0FC0             LSRS     R0,R0,#+31
    204              return RESET;
    205            else
    206              return SET;
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
    207          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     s_vectnGpioPinVersion
    208          
    209          
    210          /**
    211           * @}
    212           */
    213          
    214          /**
    215           * @}
    216           */
    217          
    218          /**
    219           * @}
    220           */
    221          
    222          
    223          
    224          /******************* (C) COPYRIGHT 2015 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Get_LedGpioPin
         8   -> SdkEvalGetVersion
       8   SdkEvalLedGetState
         8   -> GPIO_ReadBit
         8   -> Get_LedGpioPin
      16   SdkEvalLedInit
        16   -> GPIO_Init
        16   -> Get_LedGpioPin
        16   -> SdkEvalLedOff
        16   -> SysCtrl_PeripheralClockCmd
       8   SdkEvalLedOff
         8   -> GPIO_WriteBit
         8   -> Get_LedGpioPin
       8   SdkEvalLedOn
         8   -> GPIO_WriteBit
         8   -> Get_LedGpioPin
       8   SdkEvalLedToggle
         8   -> GPIO_ToggleBits
         8   -> Get_LedGpioPin


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      58  Get_LedGpioPin
      18  SdkEvalLedGetState
      44  SdkEvalLedInit
      14  SdkEvalLedOff
      14  SdkEvalLedOn
      12  SdkEvalLedToggle

 
 164 bytes in section .text
 
 164 bytes of CODE memory

Errors: none
Warnings: none
