<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Slave_w_Polling.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Slave_w_Polling.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Mon Jan 29 16:10:26 2018
<BR><P>
<H3>Maximum Stack Usage =         72 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
RESET_HANDLER &rArr; main &rArr; SystemInit &rArr; DeviceConfiguration
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[2e]">assert_failed</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">assert_failed</a><BR>
 <LI><a href="#[46]">processCommand</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">processCommand</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC_Handler</a> from system_bluenrg1.o(i.ADC_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[f]">Blue_Handler</a> from system_bluenrg1.o(i.Blue_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[1a]">DMA_Handler</a> from system_bluenrg1.o(i.DMA_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[b]">GPIO_Handler</a> from system_bluenrg1.o(i.GPIO_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[7]">HardFault_Handler</a> from bluenrg1_it.o(i.HardFault_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[13]">I2C1_Handler</a> from system_bluenrg1.o(i.I2C1_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[12]">I2C2_Handler</a> from system_bluenrg1.o(i.I2C2_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[14]">MFT1A_Handler</a> from system_bluenrg1.o(i.MFT1A_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[15]">MFT1B_Handler</a> from system_bluenrg1.o(i.MFT1B_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[16]">MFT2A_Handler</a> from system_bluenrg1.o(i.MFT2A_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[17]">MFT2B_Handler</a> from system_bluenrg1.o(i.MFT2B_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[6]">NMI_Handler</a> from bluenrg1_it.o(i.NMI_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[c]">NVM_Handler</a> from system_bluenrg1.o(i.NVM_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[19]">PKA_Handler</a> from system_bluenrg1.o(i.PKA_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[9]">PendSV_Handler</a> from system_bluenrg1.o(i.PendSV_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[5]">RESET_HANDLER</a> from system_bluenrg1.o(i.RESET_HANDLER) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[18]">RTC_Handler</a> from system_bluenrg1.o(i.RTC_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[e]">SPI_Handler</a> from system_bluenrg1.o(i.SPI_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[8]">SVC_Handler</a> from bluenrg1_it.o(i.SVC_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[a]">SysTick_Handler</a> from bluenrg1_it.o(i.SysTick_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[d]">UART_Handler</a> from system_bluenrg1.o(i.UART_Handler) referenced from system_bluenrg1.o(.intvec)
 <LI><a href="#[10]">WDG_Handler</a> from system_bluenrg1.o(i.WDG_Handler) referenced from system_bluenrg1.o(.intvec)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_HANDLER
</UL>

<P><STRONG><a name="[1c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1e]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[48]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[49]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[4a]"></a>CS_contextSave</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, context_switch.o(. text), UNUSED)

<P><STRONG><a name="[44]"></a>CS_contextRestore</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, context_switch.o(. text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init
</UL>

<P><STRONG><a name="[4b]"></a>BlueNRG_IdleSleep</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, context_switch.o(. text), UNUSED)

<P><STRONG><a name="[21]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[4c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[4d]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[4e]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[4f]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[50]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[51]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[52]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[53]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[54]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[55]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[56]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[57]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[58]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[59]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[5a]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[5b]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[5c]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[5d]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[5e]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[5f]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[60]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[26]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[61]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[62]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[63]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[64]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[65]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[66]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[67]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[1d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[68]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[69]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry6.o(.ARM.Collect$$rtentry$$00000006))

<P><STRONG><a name="[20]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[6a]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[22]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; SystemInit &rArr; DeviceConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[6b]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[25]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[6c]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[27]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceConfiguration
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBaudrate
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[28]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[71]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>ADC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.ADC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[f]"></a>Blue_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.Blue_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.DMA_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[2b]"></a>DeviceConfiguration</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, system_bluenrg1.o(i.DeviceConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DeviceConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[b]"></a>GPIO_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.GPIO_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[2d]"></a>GPIO_Init</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, bluenrg1_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
</UL>

<P><STRONG><a name="[3c]"></a>GPIO_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluenrg1_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
</UL>

<P><STRONG><a name="[2f]"></a>GPIO_ToggleBits</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bluenrg1_gpio.o(i.GPIO_ToggleBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ToggleBits
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedToggle
</UL>

<P><STRONG><a name="[30]"></a>GPIO_WriteBit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bluenrg1_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOff
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[13]"></a>I2C1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.I2C1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[12]"></a>I2C2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.I2C2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[14]"></a>MFT1A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.MFT1A_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[15]"></a>MFT1B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.MFT1B_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[16]"></a>MFT2A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.MFT2A_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[17]"></a>MFT2B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.MFT2B_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[c]"></a>NVM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.NVM_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[19]"></a>PKA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.PKA_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[5]"></a>RESET_HANDLER</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_bluenrg1.o(i.RESET_HANDLER))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = RESET_HANDLER &rArr; main &rArr; SystemInit &rArr; DeviceConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__low_level_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[18]"></a>RTC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.RTC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[34]"></a>SPI_ClearRXFIFO</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluenrg1_spi.o(i.SPI_ClearRXFIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_ClearRXFIFO &rArr; SPI_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
</UL>

<P><STRONG><a name="[3e]"></a>SPI_ClearTXFIFO</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bluenrg1_spi.o(i.SPI_ClearTXFIFO))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
</UL>

<P><STRONG><a name="[36]"></a>SPI_Cmd</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bluenrg1_spi.o(i.SPI_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
</UL>

<P><STRONG><a name="[35]"></a>SPI_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bluenrg1_spi.o(i.SPI_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ClearRXFIFO
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processCommand
</UL>

<P><STRONG><a name="[e]"></a>SPI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.SPI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[37]"></a>SPI_Init</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, bluenrg1_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Init &rArr; SPI_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBaudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
</UL>

<P><STRONG><a name="[47]"></a>SPI_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bluenrg1_spi.o(i.SPI_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processCommand
</UL>

<P><STRONG><a name="[38]"></a>SPI_SetBaudrate</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bluenrg1_spi.o(i.SPI_SetBaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[3a]"></a>SPI_Slave_Configuration</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, spi_slave_polling_main.o(i.SPI_Slave_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_Slave_Configuration &rArr; SPI_Init &rArr; SPI_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalGetVersion
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtrl_PeripheralClockCmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_StructInit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ClearTXFIFO
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ClearRXFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>SPI_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bluenrg1_spi.o(i.SPI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[32]"></a>SdkEvalGetVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sdk_eval_config.o(i.SdkEvalGetVersion))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LedGpioPin
</UL>

<P><STRONG><a name="[45]"></a>SdkEvalIdentification</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sdk_eval_config.o(i.SdkEvalIdentification))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>SdkEvalLedInit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sdk_eval_led.o(i.SdkEvalLedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SdkEvalLedInit &rArr; SdkEvalLedOff &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtrl_PeripheralClockCmd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOff
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LedGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>SdkEvalLedOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sdk_eval_led.o(i.SdkEvalLedOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SdkEvalLedOff &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LedGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
</UL>

<P><STRONG><a name="[41]"></a>SdkEvalLedToggle</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sdk_eval_led.o(i.SdkEvalLedToggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SdkEvalLedToggle &rArr; GPIO_ToggleBits
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LedGpioPin
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processCommand
</UL>

<P><STRONG><a name="[3b]"></a>SysCtrl_PeripheralClockCmd</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bluenrg1_sysctrl.o(i.SysCtrl_PeripheralClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysCtrl_PeripheralClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bluenrg1_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[42]"></a>SystemInit</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, system_bluenrg1.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemInit &rArr; DeviceConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceConfiguration
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>UART_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.UART_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[10]"></a>WDG_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_bluenrg1.o(i.WDG_Handler))
<BR>[Address Reference Count : 1]<UL><LI> system_bluenrg1.o(.intvec)
</UL>
<P><STRONG><a name="[33]"></a>__low_level_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, system_bluenrg1.o(i.__low_level_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __low_level_init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CS_contextRestore
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_HANDLER
</UL>

<P><STRONG><a name="[2e]"></a>assert_failed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, spi_slave_polling_main.o(i.assert_failed))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtrl_PeripheralClockCmd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetBaudrate
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetFlagStatus
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>

<P><STRONG><a name="[23]"></a>main</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, spi_slave_polling_main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main &rArr; SystemInit &rArr; DeviceConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processCommand
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Slave_Configuration
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalIdentification
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_HANDLER
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[46]"></a>processCommand</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, spi_slave_polling_main.o(i.processCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = processCommand &rArr;  processCommand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetFlagStatus
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processCommand
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedToggle
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processCommand
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[31]"></a>Get_LedGpioPin</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, sdk_eval_led.o(i.Get_LedGpioPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_LedGpioPin
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalGetVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedToggle
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedOff
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdkEvalLedInit
</UL>

<P><STRONG><a name="[43]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, system_bluenrg1.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[29]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
