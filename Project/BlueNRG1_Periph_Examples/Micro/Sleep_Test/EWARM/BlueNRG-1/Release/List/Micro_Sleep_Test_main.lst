###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       29/Nov/2017  10:11:20
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\Micro_Sleep_Test_main.c
#    Command line =  
#        "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\Micro_Sleep_Test_main.c"
#        -D HS_SPEED_XTAL=HS_SPEED_XTAL_16MHZ -D
#        LS_SOURCE=LS_SOURCE_EXTERNAL_32KHZ -D SMPS_INDUCTOR=SMPS_INDUCTOR_10uH
#        --preprocess=cl "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2
#        DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        -lC "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        -lA "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        -o "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\Obj"
#        --debug --endian=little --cpu=Cortex-M0 -e --fpu=None --dlib_config
#        D:\Software\IAR_BlueNRG\arm\INC\c\DLib_Config_Normal.h -I "D:\Program
#        Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\BlueNRG1_Periph_Driver\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\CMSIS\Device\ST\BlueNRG1\Include\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\SDK_Eval_BlueNRG1\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\CMSIS\Include\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\hal\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\Bluetooth_LE\inc\"
#        -Ohz
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List\Micro_Sleep_Test_main.lst
#    Object file  =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\Obj\Micro_Sleep_Test_main.o
#
###############################################################################

D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK 2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\Micro_Sleep_Test_main.c
      1          /******************** (C) COPYRIGHT 2015 STMicroelectronics ********************
      2          * File Name          : Micro/Sleep_Test/Micro_Sleep_Test_main.c 
      3          * Author             : AMS - VMA RF Application Team
      4          * Version            : V1.0.0
      5          * Date               : 02-October-2015
      6          * Description        : BlueNRG-1 main file for sleep test
      7          ********************************************************************************
      8          * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
      9          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     10          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     11          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     12          * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     13          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     14          *******************************************************************************/
     15          
     16          /* Includes ------------------------------------------------------------------*/
     17          #include <stdio.h>
     18          #include <string.h>
     19          #include "hw_config.h"
     20          #include "BlueNRG1_it.h"
     21          #include "BlueNRG1_conf.h"
     22          #include "sleep.h"
     23          #include "bluenrg1_stack.h"
     24          #include "ble_status.h"
     25          #include "SDK_EVAL_Led.h"
     26          #include "osal.h"
     27          #include "Micro_Sleep_Test_config.h"

   \                                 In section .noinit, align 4
   \   __absolute uint32_t dyn_alloc_a[1609]
   \                     dyn_alloc_a:
   \   00000000                      DS8 6436

   \                                 In section .noinit.stacklib_flash_data, align 4
   \   __absolute uint32_t const stacklib_flash_data[512]
   \                     stacklib_flash_data:
   \   00000000                      DS8 2048

   \                                 In section .noinit.stacklib_stored_device_id_data, align 4
   \   __absolute uint8_t const stacklib_stored_device_id_data[56]
   \                     stacklib_stored_device_id_data:
   \   00000000                      DS8 56

   \                                 In section .text, align 4, keep-with-next
   \   __absolute struct <unnamed> const BlueNRG_Stack_Init_params
   \                     BlueNRG_Stack_Init_params:
   \   00000000   0x........         DC32 stacklib_flash_data, 1024, 1024, stacklib_stored_device_id_data
   \              0x00000400   
   \              0x00000400   
   \              0x........   
   \   00000010   0x........         DC32 dyn_alloc_a, 6436
   \              0x00001924   
   \   00000018   0x0009 0x0002      DC16 9, 2, 44
   \              0x002C       
   \   0000001E   0x01 0x00          DC8 1, 0, 0, 10
   \              0x00 0x0A    
   \   00000022   0x0017             DC16 23
   \   00000024   0x00000000         DC32 0H, 4294967295
   \              0xFFFFFFFF   
   \   0000002C   0x0064             DC16 100
   \   0000002E   0x03 0x00          DC8 3, 0
   \   00000030   0x0107             DC16 263
   \   00000032   0x00 0x00          DC8 0, 0
     28          
     29          /** @addtogroup BlueNRG1_StdPeriph_Examples BlueNRG1 Standard Peripheral Examples
     30            * @{
     31            */
     32          
     33          /** @addtogroup Micro_Examples Micro Examples
     34            * @{
     35            */
     36          
     37          /** @addtogroup Micro_SleepTest  Micro Sleep Test Example
     38            * @{
     39            */
     40          
     41          /* Private typedef -----------------------------------------------------------*/
     42          /* Private define ------------------------------------------------------------*/
     43          
     44          #define WAKEUP_TIMER 0 //Virtual Timer #0
     45          #define WAKEUP_TIMEOUT 5000 // 5 sec 
     46          
     47          /* Private macro -------------------------------------------------------------*/
     48          /* Private variables ---------------------------------------------------------*/
     49          
     50          

   \                                 In section .text, align 4, keep-with-next
     51          void help(void)
     52          {
   \                     help: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     53            printf("\r\n");
   \   00000002   0x....             ADR      R0,??DataTable37  ;; 0x0D, 0x0A, 0x00, 0x00
   \   00000004   0x.... 0x....      BL       printf
     54            printf("s:   Standby - SLEEPMODE_NOTIMER: wake on uart/button PUSH1\r\n");
   \   00000008   0x....             ADR.N    R0,?_1
   \   0000000A   0x.... 0x....      BL       printf
     55            printf("t:   Sleep - SLEEPMODE_WAKETIMER: wake on uart/timeout 5 sec/button PUSH1\r\n");
   \   0000000E   0xBF00             Nop      
   \   00000010   0x....             ADR.N    R0,?_2
   \   00000012   0x.... 0x....      BL       printf
     56            printf("l:   Toggle led DL1\r\n");
   \   00000016   0x....             LDR      R0,??DataTable37_1
   \   00000018   0x.... 0x....      BL       printf
     57            printf("p:   Print Hello World message\r\n");
   \   0000001C   0x....             LDR      R0,??DataTable37_2
   \   0000001E   0x.... 0x....      BL       printf
     58            printf("r:   Reset the BlueNRG-1\r\n");
   \   00000022   0x....             LDR      R0,??DataTable37_3
   \   00000024   0x.... 0x....      BL       printf
     59            printf("?:   Display this help menu\r\n");
   \   00000028   0x....             LDR      R0,??DataTable37_4
   \   0000002A   0x.... 0x....      BL       printf
     60            printf("PUSH1 button: toggle led DL1");
   \   0000002E   0x....             LDR      R0,??DataTable37_5
   \   00000030   0x.... 0x....      BL       printf
     61            printf("\r\n> ");
   \   00000034   0x....             LDR      R0,??DataTable37_6
   \   00000036   0x.... 0x....      BL       printf
     62          }
   \   0000003A   0xBD01             POP      {R0,PC}          ;; return
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void printWakeupSource(void)
     65          {
   \                     printWakeupSource: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     66            printf("WAKEUP Reason = ");
   \   00000002   0x....             LDR      R0,??DataTable37_7
   \   00000004   0x.... 0x....      BL       printf
     67          
     68            switch(BlueNRG_WakeupSource()) {
   \   00000008   0x.... 0x....      BL       BlueNRG_WakeupSource
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD016             BEQ      ??printWakeupSource_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD016             BEQ      ??printWakeupSource_1
   \   00000014   0x2804             CMP      R0,#+4
   \   00000016   0xD016             BEQ      ??printWakeupSource_2
   \   00000018   0x2808             CMP      R0,#+8
   \   0000001A   0xD016             BEQ      ??printWakeupSource_3
   \   0000001C   0x2810             CMP      R0,#+16
   \   0000001E   0xD016             BEQ      ??printWakeupSource_4
   \   00000020   0x2820             CMP      R0,#+32
   \   00000022   0xD016             BEQ      ??printWakeupSource_5
   \   00000024   0x2840             CMP      R0,#+64
   \   00000026   0xD016             BEQ      ??printWakeupSource_6
   \   00000028   0x28F0             CMP      R0,#+240
   \   0000002A   0xD016             BEQ      ??printWakeupSource_7
   \   0000002C   0x28F1             CMP      R0,#+241
   \   0000002E   0xD016             BEQ      ??printWakeupSource_8
   \   00000030   0x28F2             CMP      R0,#+242
   \   00000032   0xD016             BEQ      ??printWakeupSource_9
   \   00000034   0x28F3             CMP      R0,#+243
   \   00000036   0xD016             BEQ      ??printWakeupSource_10
   \   00000038   0x28FF             CMP      R0,#+255
   \   0000003A   0xD016             BEQ      ??printWakeupSource_11
   \   0000003C   0xE017             B        ??printWakeupSource_12
     69            case WAKEUP_IO9:
     70              printf("IO-9\r\n");
   \                     ??printWakeupSource_0: (+1)
   \   0000003E   0x....             LDR      R0,??DataTable37_8
   \   00000040   0xE016             B        ??printWakeupSource_13
     71              break;
     72            case WAKEUP_IO10:
     73              printf("IO-10\r\n");
   \                     ??printWakeupSource_1: (+1)
   \   00000042   0x....             LDR      R0,??DataTable37_9
   \   00000044   0xE014             B        ??printWakeupSource_13
     74              break;
     75            case WAKEUP_IO11:
     76              printf("IO-11\r\n");
   \                     ??printWakeupSource_2: (+1)
   \   00000046   0x....             LDR      R0,??DataTable37_10
   \   00000048   0xE012             B        ??printWakeupSource_13
     77              break;
     78            case WAKEUP_IO12:
     79              printf("IO-12\r\n");
   \                     ??printWakeupSource_3: (+1)
   \   0000004A   0x....             LDR      R0,??DataTable37_11
   \   0000004C   0xE010             B        ??printWakeupSource_13
     80              break;
     81            case WAKEUP_IO13:
     82              printf("IO-13\r\n");
   \                     ??printWakeupSource_4: (+1)
   \   0000004E   0x....             LDR      R0,??DataTable37_12
   \   00000050   0xE00E             B        ??printWakeupSource_13
     83              break;
     84            case WAKEUP_SLEEP_TIMER1:
     85              printf("SLEEP TIMER1\r\n");
   \                     ??printWakeupSource_5: (+1)
   \   00000052   0x....             LDR      R0,??DataTable37_13
   \   00000054   0xE00C             B        ??printWakeupSource_13
     86              break;
     87            case WAKEUP_SLEEP_TIMER2:
     88              printf("SLEEP TIMER2\r\n");
   \                     ??printWakeupSource_6: (+1)
   \   00000056   0x....             LDR      R0,??DataTable37_14
   \   00000058   0xE00A             B        ??printWakeupSource_13
     89              break;
     90            case WAKEUP_BOR:
     91              printf("BOR\r\n");
   \                     ??printWakeupSource_7: (+1)
   \   0000005A   0x....             LDR      R0,??DataTable37_15
   \   0000005C   0xE008             B        ??printWakeupSource_13
     92              break;
     93            case WAKEUP_POR:
     94              printf("POR\r\n");
   \                     ??printWakeupSource_8: (+1)
   \   0000005E   0x....             LDR      R0,??DataTable37_16
   \   00000060   0xE006             B        ??printWakeupSource_13
     95              break;
     96            case WAKEUP_SYS_RESET_REQ:
     97              printf("SYS RESET REQ\r\n");
   \                     ??printWakeupSource_9: (+1)
   \   00000062   0x....             LDR      R0,??DataTable37_17
   \   00000064   0xE004             B        ??printWakeupSource_13
     98              break;
     99            case WAKEUP_RESET_WDG:
    100              printf("WDG\r\n");
   \                     ??printWakeupSource_10: (+1)
   \   00000066   0x....             LDR      R0,??DataTable37_18
   \   00000068   0xE002             B        ??printWakeupSource_13
    101              break;
    102            case NO_WAKEUP_RESET:
    103              printf("NO WAKEUP RESET\r\n");
   \                     ??printWakeupSource_11: (+1)
   \   0000006A   0x....             LDR      R0,??DataTable37_19
   \   0000006C   0xE000             B        ??printWakeupSource_13
    104              break;
    105            default:
    106              printf("Unknown source\r\n");
   \                     ??printWakeupSource_12: (+1)
   \   0000006E   0x....             LDR      R0,??DataTable37_20
   \                     ??printWakeupSource_13: (+1)
   \   00000070   0x.... 0x....      BL       printf
    107              break;
    108            }
    109          }
   \   00000074   0xBD01             POP      {R0,PC}          ;; return
    110           
    111          /* Enable the Standby - SLEEPMODE_NOTIMER */

   \                                 In section .text, align 4, keep-with-next
    112          void sleep(void)
    113          {
   \                     sleep: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    114            uint8_t ret, wakeup_source, wakeup_level;
    115          
    116            wakeup_source = WAKEUP_IO13|WAKEUP_IO11;
    117            wakeup_level = (WAKEUP_IOx_LOW << WAKEUP_IO13_SHIFT_MASK) | (WAKEUP_IOx_LOW << WAKEUP_IO11_SHIFT_MASK);
    118          
    119            printf("\r\nEnter to Standby - SLEEPMODE_NOTIMER\r\n");
   \   00000002   0x....             LDR      R0,??DataTable37_21
   \   00000004   0x.... 0x....      BL       printf
    120            ret = BlueNRG_Sleep(SLEEPMODE_NOTIMER, wakeup_source, wakeup_level);
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2114             MOVS     R1,#+20
   \   0000000C   0x2003             MOVS     R0,#+3
   \   0000000E   0x.... 0x....      BL       BlueNRG_Sleep
    121            if (ret != BLE_STATUS_SUCCESS) {
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD004             BEQ      ??sleep_0
    122              printf("BlueNRG_Sleep() error 0x%02x\r\n", ret);
   \   00000016   0x0001             MOVS     R1,R0
   \   00000018   0x....             ADR.N    R0,?_24
   \   0000001A   0x.... 0x....      BL       printf
    123              while(1);
   \                     ??sleep_1: (+1)
   \   0000001E   0xE7FE             B        ??sleep_1
    124            }
    125            printWakeupSource();
   \                     ??sleep_0: (+1)
   \   00000020   0x.... 0x....      BL       printWakeupSource
    126          }
   \   00000024   0xBD01             POP      {R0,PC}          ;; return
    127          
    128          /* Enable the Sleep - SLEEPMODE_WAKETIMER */

   \                                 In section .text, align 4, keep-with-next
    129          void sleep_timer(void)
    130          {
   \                     sleep_timer: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    131            uint8_t ret, wakeup_source, wakeup_level;  
    132          
    133            wakeup_source = WAKEUP_IO13|WAKEUP_IO11;
    134            wakeup_level = (WAKEUP_IOx_LOW << WAKEUP_IO13_SHIFT_MASK) | (WAKEUP_IOx_LOW << WAKEUP_IO11_SHIFT_MASK);
    135            
    136            printf("\r\nEnter to Sleep - SLEEPMODE_WAKETIMER\r\n");
   \   00000002   0x....             LDR      R0,??DataTable37_22
   \   00000004   0x.... 0x....      BL       printf
    137          
    138            ret = HAL_VTimerStart_ms(WAKEUP_TIMER, WAKEUP_TIMEOUT);
   \   00000008   0x....             LDR      R1,??DataTable37_23  ;; 0x1388
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      BL       HAL_VTimerStart_ms
   \   00000010   0xB2C0             UXTB     R0,R0
   \   00000012   0x2800             CMP      R0,#+0
    139            if (ret != BLE_STATUS_SUCCESS) {
   \   00000014   0xD004             BEQ      ??sleep_timer_0
    140              printf("HAL_VTimerStart_ms() error 0x%02x\r\n", ret);
   \   00000016   0x0001             MOVS     R1,R0
   \   00000018   0x....             ADR.N    R0,?_26
   \   0000001A   0x.... 0x....      BL       printf
    141              while(1);
   \                     ??sleep_timer_1: (+1)
   \   0000001E   0xE7FE             B        ??sleep_timer_1
    142            }
    143            BTLE_StackTick();
   \                     ??sleep_timer_0: (+1)
   \   00000020   0x.... 0x....      BL       BTLE_StackTick
    144            
    145            ret = BlueNRG_Sleep(SLEEPMODE_WAKETIMER, wakeup_source, wakeup_level);
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2114             MOVS     R1,#+20
   \   00000028   0x2002             MOVS     R0,#+2
   \   0000002A   0x.... 0x....      BL       BlueNRG_Sleep
    146            if (ret != BLE_STATUS_SUCCESS) {
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD004             BEQ      ??sleep_timer_2
    147              printf("BlueNRG_Sleep() error 0x%02x\r\n", ret);
   \   00000032   0x0001             MOVS     R1,R0
   \   00000034   0x....             ADR.N    R0,?_24
   \   00000036   0x.... 0x....      BL       printf
    148              while(1);
   \                     ??sleep_timer_3: (+1)
   \   0000003A   0xE7FE             B        ??sleep_timer_3
    149            }
    150            printWakeupSource();
   \                     ??sleep_timer_2: (+1)
   \   0000003C   0x.... 0x....      BL       printWakeupSource
    151            /* Stop VTimer */
    152            HAL_VTimer_Stop(WAKEUP_TIMER);
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      BL       HAL_VTimer_Stop
    153          }
   \   00000046   0xBD01             POP      {R0,PC}          ;; return
    154          
    155          

   \                                 In section .text, align 4, keep-with-next
    156          int main(void)
    157          {
   \                     main: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    158            uint8_t charRead, ret;
    159            
    160            /* System Init */
    161            SystemInit();
   \   00000002   0x.... 0x....      BL       SystemInit
    162            
    163            /* Identify BlueNRG1 platform */
    164            SdkEvalIdentification();
   \   00000006   0x.... 0x....      BL       SdkEvalIdentification
    165            
    166            /* HW configuration */
    167            HW_Config();
   \   0000000A   0x.... 0x....      BL       HW_Config
    168          
    169            /* BlueNRG-1 stack init */
    170            ret = BlueNRG_Stack_Initialization(&BlueNRG_Stack_Init_params);
   \   0000000E   0xBF00             Nop      
   \   00000010   0x....             ADR.N    R0,BlueNRG_Stack_Init_params
   \   00000012   0x.... 0x....      BL       BlueNRG_Stack_Initialization
    171            if (ret != BLE_STATUS_SUCCESS) {
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD004             BEQ      ??main_0
    172              printf("Error during BlueNRG_Stack_Initialization() 0x%02x\r\n", ret);
   \   0000001A   0x0001             MOVS     R1,R0
   \   0000001C   0x....             ADR.N    R0,?_27
   \   0000001E   0x.... 0x....      BL       printf
    173              while(1);
   \                     ??main_1: (+1)
   \   00000022   0xE7FE             B        ??main_1
    174            }
    175            
    176            printf("Sleep Test\r\n");
   \                     ??main_0: (+1)
   \   00000024   0x....             LDR      R0,??DataTable37_24
   \   00000026   0x.... 0x....      BL       printf
    177            printf("Enter ? for list of commands\r\n");
   \   0000002A   0xBF00             Nop      
   \   0000002C   0x....             ADR.N    R0,?_29
   \   0000002E   0x.... 0x....      BL       printf
   \   00000032   0xBF00             Nop      
   \   00000034   0x....             ADR.N    R4,?_31
   \   00000036   0xBF00             Nop      
   \   00000038   0x....             ADR.N    R5,?_30
   \   0000003A   0xE001             B        ??main_2
    178          
    179            while(1) {
    180              BTLE_StackTick();
    181          
    182              if (noBlockingRead(&charRead)) {
    183                switch (charRead) {
    184                case 's':
    185                  sleep();
   \                     ??main_3: (+1)
   \   0000003C   0x.... 0x....      BL       sleep
    186                  break;
   \                     ??main_2: (+1)
   \   00000040   0x.... 0x....      BL       BTLE_StackTick
   \   00000044   0x4668             MOV      R0,SP
   \   00000046   0x.... 0x....      BL       noBlockingRead
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD0F8             BEQ      ??main_2
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0x280A             CMP      R0,#+10
   \   00000054   0xD0F4             BEQ      ??main_2
   \   00000056   0x280D             CMP      R0,#+13
   \   00000058   0xD0F2             BEQ      ??main_2
   \   0000005A   0x283F             CMP      R0,#+63
   \   0000005C   0xD010             BEQ      ??main_4
   \   0000005E   0x286C             CMP      R0,#+108
   \   00000060   0xD00A             BEQ      ??main_5
   \   00000062   0x2870             CMP      R0,#+112
   \   00000064   0xD00F             BEQ      ??main_6
   \   00000066   0x2872             CMP      R0,#+114
   \   00000068   0xD011             BEQ      ??main_7
   \   0000006A   0x2873             CMP      R0,#+115
   \   0000006C   0xD0E6             BEQ      ??main_3
   \   0000006E   0x2874             CMP      R0,#+116
   \   00000070   0xD115             BNE      ??main_8
    187                case 't':
    188                  sleep_timer();
   \   00000072   0x.... 0x....      BL       sleep_timer
    189                  break;
   \   00000076   0xE7E3             B        ??main_2
    190                case 'l':
    191                  SdkEvalLedToggle(LED1);
   \                     ??main_5: (+1)
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      BL       SdkEvalLedToggle
    192                  break;
   \   0000007E   0xE7DF             B        ??main_2
    193                case '?':
    194                  help();
   \                     ??main_4: (+1)
   \   00000080   0x.... 0x....      BL       help
    195                  break;
   \   00000084   0xE7DC             B        ??main_2
    196                case 'p':
    197                  printf("Hello World Sleep !!!\r\n");
   \                     ??main_6: (+1)
   \   00000086   0x0028             MOVS     R0,R5
   \                     ??main_9: (+1)
   \   00000088   0x.... 0x....      BL       printf
    198                  break;
   \   0000008C   0xE7D8             B        ??main_2
    199                case 'r':
    200                  NVIC_SystemReset();
   \                     ??main_7: (+1)
   \   0000008E   0xF3BF 0x8F4F      DSB      
   \   00000092   0x....             LDR      R0,??DataTable37_25  ;; 0x5fa0004
   \   00000094   0x....             LDR      R1,??DataTable37_26  ;; 0xe000ed0c
   \   00000096   0x6008             STR      R0,[R1, #+0]
   \   00000098   0xF3BF 0x8F4F      DSB      
   \                     ??main_10: (+1)
   \   0000009C   0xE7FE             B        ??main_10
    201                  break;
    202                case '\r':
    203                case '\n':
    204                  // ignored
    205                  break;
    206                default:
    207                  printf("Unknown Command\r\n");
   \                     ??main_8: (+1)
   \   0000009E   0x0020             MOVS     R0,R4
   \   000000A0   0xE7F2             B.N      ??main_9
    208                }
    209              }
    210            }
    211          }
    212          

   \                                 In section .text, align 2, keep-with-next
    213          void HAL_VTimerTimeoutCallback(uint8_t timerNum)
    214          {
    215            /* Add app code to execute @ Sleep timeout */
    216          }
   \                     HAL_VTimerTimeoutCallback: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ?_26:
   \   00000000   0x48 0x41          DC8 "HAL_VTimerStart_ms() error 0x%02x\015\012"
   \              0x4C 0x5F    
   \              0x56 0x54    
   \              0x69 0x6D    
   \              0x65 0x72    
   \              0x53 0x74    
   \              0x61 0x72    
   \              0x74 0x5F    
   \              0x6D 0x73    
   \              0x28 0x29    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x30 0x32    
   \              0x78 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x42 0x6C          DC8 "BlueNRG_Sleep() error 0x%02x\015\012"
   \              0x75 0x65    
   \              0x4E 0x52    
   \              0x47 0x5F    
   \              0x53 0x6C    
   \              0x65 0x65    
   \              0x70 0x28    
   \              0x29 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x30 0x78    
   \              0x25 0x30    
   \              0x32 0x78    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_1:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_2:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_3:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_4:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_5:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_6:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_7:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_8:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_9:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_10:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_11:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_12:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_13:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_14:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_15:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_16:
   \   00000000   0x........         DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_17:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_18:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_19:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_20:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_21:
   \   00000000   0x........         DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_22:
   \   00000000   0x........         DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_23:
   \   00000000   0x00001388         DC32     0x1388

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_24:
   \   00000000   0x........         DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_25:
   \   00000000   0x05FA0004         DC32     0x5fa0004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_26:
   \   00000000   0xE000ED0C         DC32     0xe000ed0c

   \                                 In section .text, align 4, keep-with-next
   \                     ?_29:
   \   00000000   0x45 0x6E          DC8 "Enter ? for list of commands\015\012"
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x3F 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x6C 0x69    
   \              0x73 0x74    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x63 0x6F    
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x73    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_31:
   \   00000000   0x55 0x6E          DC8 "Unknown Command\015\012"
   \              0x6B 0x6E    
   \              0x6F 0x77    
   \              0x6E 0x20    
   \              0x43 0x6F    
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_30:
   \   00000000   0x48 0x65          DC8 "Hello World Sleep !!!\015\012"
   \              0x6C 0x6C    
   \              0x6F 0x20    
   \              0x57 0x6F    
   \              0x72 0x6C    
   \              0x64 0x20    
   \              0x53 0x6C    
   \              0x65 0x65    
   \              0x70 0x20    
   \              0x21 0x21    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x6C 0x3A          DC8 "l:   Toggle led DL1\015\012"
   \              0x20 0x20    
   \              0x20 0x54    
   \              0x6F 0x67    
   \              0x67 0x6C    
   \              0x65 0x20    
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x44 0x4C    
   \              0x31 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x70 0x3A          DC8 "p:   Print Hello World message\015\012"
   \              0x20 0x20    
   \              0x20 0x50    
   \              0x72 0x69    
   \              0x6E 0x74    
   \              0x20 0x48    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x20 0x57    
   \              0x6F 0x72    
   \              0x6C 0x64    
   \              0x20 0x6D    
   \              0x65 0x73    
   \              0x73 0x61    
   \              0x67 0x65    
   \              0x0D 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x72 0x3A          DC8 "r:   Reset the BlueNRG-1\015\012"
   \              0x20 0x20    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x20 0x74    
   \              0x68 0x65    
   \              0x20 0x42    
   \              0x6C 0x75    
   \              0x65 0x4E    
   \              0x52 0x47    
   \              0x2D 0x31    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x3F 0x3A          DC8 "?:   Display this help menu\015\012"
   \              0x20 0x20    
   \              0x20 0x44    
   \              0x69 0x73    
   \              0x70 0x6C    
   \              0x61 0x79    
   \              0x20 0x74    
   \              0x68 0x69    
   \              0x73 0x20    
   \              0x68 0x65    
   \              0x6C 0x70    
   \              0x20 0x6D    
   \              0x65 0x6E    
   \              0x75 0x0D    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x50 0x55          DC8 "PUSH1 button: toggle led DL1"
   \              0x53 0x48    
   \              0x31 0x20    
   \              0x62 0x75    
   \              0x74 0x74    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x74 0x6F    
   \              0x67 0x67    
   \              0x6C 0x65    
   \              0x20 0x6C    
   \              0x65 0x64    
   \              0x20 0x44    
   \              0x4C 0x31    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x0D 0x0A          DC8 "\015\012> "
   \              0x3E 0x20    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x57 0x41          DC8 "WAKEUP Reason = "
   \              0x4B 0x45    
   \              0x55 0x50    
   \              0x20 0x52    
   \              0x65 0x61    
   \              0x73 0x6F    
   \              0x6E 0x20    
   \              0x3D 0x20    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x49 0x4F          DC8 "IO-9\015\012"
   \              0x2D 0x39    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x49 0x4F          DC8 "IO-10\015\012"
   \              0x2D 0x31    
   \              0x30 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x49 0x4F          DC8 "IO-11\015\012"
   \              0x2D 0x31    
   \              0x31 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x49 0x4F          DC8 "IO-12\015\012"
   \              0x2D 0x31    
   \              0x32 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x49 0x4F          DC8 "IO-13\015\012"
   \              0x2D 0x31    
   \              0x33 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x53 0x4C          DC8 "SLEEP TIMER1\015\012"
   \              0x45 0x45    
   \              0x50 0x20    
   \              0x54 0x49    
   \              0x4D 0x45    
   \              0x52 0x31    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x53 0x4C          DC8 "SLEEP TIMER2\015\012"
   \              0x45 0x45    
   \              0x50 0x20    
   \              0x54 0x49    
   \              0x4D 0x45    
   \              0x52 0x32    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x42 0x4F          DC8 "BOR\015\012"
   \              0x52 0x0D    
   \              0x0A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x50 0x4F          DC8 "POR\015\012"
   \              0x52 0x0D    
   \              0x0A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x53 0x59          DC8 "SYS RESET REQ\015\012"
   \              0x53 0x20    
   \              0x52 0x45    
   \              0x53 0x45    
   \              0x54 0x20    
   \              0x52 0x45    
   \              0x51 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x57 0x44          DC8 "WDG\015\012"
   \              0x47 0x0D    
   \              0x0A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x4E 0x4F          DC8 "NO WAKEUP RESET\015\012"
   \              0x20 0x57    
   \              0x41 0x4B    
   \              0x45 0x55    
   \              0x50 0x20    
   \              0x52 0x45    
   \              0x53 0x45    
   \              0x54 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x55 0x6E          DC8 "Unknown source\015\012"
   \              0x6B 0x6E    
   \              0x6F 0x77    
   \              0x6E 0x20    
   \              0x73 0x6F    
   \              0x75 0x72    
   \              0x63 0x65    
   \              0x0D 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x0D 0x0A          DC8 "\015\012Enter to Standby - SLEEPMODE_NOTIMER\015\012"
   \              0x45 0x6E    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x74 0x6F    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x6E 0x64    
   \              0x62 0x79    
   \              0x20 0x2D    
   \              0x20 0x53    
   \              0x4C 0x45    
   \              0x45 0x50    
   \              0x4D 0x4F    
   \              0x44 0x45    
   \              0x5F 0x4E    
   \              0x4F 0x54    
   \              0x49 0x4D    
   \              0x45 0x52    
   \              0x0D 0x0A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x0D 0x0A          DC8 "\015\012Enter to Sleep - SLEEPMODE_WAKETIMER\015\012"
   \              0x45 0x6E    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x74 0x6F    
   \              0x20 0x53    
   \              0x6C 0x65    
   \              0x65 0x70    
   \              0x20 0x2D    
   \              0x20 0x53    
   \              0x4C 0x45    
   \              0x45 0x50    
   \              0x4D 0x4F    
   \              0x44 0x45    
   \              0x5F 0x57    
   \              0x41 0x4B    
   \              0x45 0x54    
   \              0x49 0x4D    
   \              0x45 0x52    
   \              0x0D 0x0A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_28:
   \   00000000   0x53 0x6C          DC8 "Sleep Test\015\012"
   \              0x65 0x65    
   \              0x70 0x20    
   \              0x54 0x65    
   \              0x73 0x74    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x73 0x3A          DC8 73H, 3AH, 20H, 20H, 20H, 53H, 74H, 61H
   \              0x20 0x20    
   \              0x20 0x53    
   \              0x74 0x61    
   \   00000008   0x6E 0x64          DC8 6EH, 64H, 62H, 79H, 20H, 2DH, 20H, 53H
   \              0x62 0x79    
   \              0x20 0x2D    
   \              0x20 0x53    
   \   00000010   0x4C 0x45          DC8 4CH, 45H, 45H, 50H, 4DH, 4FH, 44H, 45H
   \              0x45 0x50    
   \              0x4D 0x4F    
   \              0x44 0x45    
   \   00000018   0x5F 0x4E          DC8 5FH, 4EH, 4FH, 54H, 49H, 4DH, 45H, 52H
   \              0x4F 0x54    
   \              0x49 0x4D    
   \              0x45 0x52    
   \   00000020   0x3A 0x20          DC8 3AH, 20H, 77H, 61H, 6BH, 65H, 20H, 6FH
   \              0x77 0x61    
   \              0x6B 0x65    
   \              0x20 0x6F    
   \   00000028   0x6E 0x20          DC8 6EH, 20H, 75H, 61H, 72H, 74H, 2FH, 62H
   \              0x75 0x61    
   \              0x72 0x74    
   \              0x2F 0x62    
   \   00000030   0x75 0x74          DC8 75H, 74H, 74H, 6FH, 6EH, 20H, 50H, 55H
   \              0x74 0x6F    
   \              0x6E 0x20    
   \              0x50 0x55    
   \   00000038   0x53 0x48          DC8 53H, 48H, 31H, 0DH, 0AH, 0
   \              0x31 0x0D    
   \              0x0A 0x00    
   \   0000003E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x74 0x3A          DC8 74H, 3AH, 20H, 20H, 20H, 53H, 6CH, 65H
   \              0x20 0x20    
   \              0x20 0x53    
   \              0x6C 0x65    
   \   00000008   0x65 0x70          DC8 65H, 70H, 20H, 2DH, 20H, 53H, 4CH, 45H
   \              0x20 0x2D    
   \              0x20 0x53    
   \              0x4C 0x45    
   \   00000010   0x45 0x50          DC8 45H, 50H, 4DH, 4FH, 44H, 45H, 5FH, 57H
   \              0x4D 0x4F    
   \              0x44 0x45    
   \              0x5F 0x57    
   \   00000018   0x41 0x4B          DC8 41H, 4BH, 45H, 54H, 49H, 4DH, 45H, 52H
   \              0x45 0x54    
   \              0x49 0x4D    
   \              0x45 0x52    
   \   00000020   0x3A 0x20          DC8 3AH, 20H, 77H, 61H, 6BH, 65H, 20H, 6FH
   \              0x77 0x61    
   \              0x6B 0x65    
   \              0x20 0x6F    
   \   00000028   0x6E 0x20          DC8 6EH, 20H, 75H, 61H, 72H, 74H, 2FH, 74H
   \              0x75 0x61    
   \              0x72 0x74    
   \              0x2F 0x74    
   \   00000030   0x69 0x6D          DC8 69H, 6DH, 65H, 6FH, 75H, 74H, 20H, 35H
   \              0x65 0x6F    
   \              0x75 0x74    
   \              0x20 0x35    
   \   00000038   0x20 0x73          DC8 20H, 73H, 65H, 63H, 2FH, 62H, 75H, 74H
   \              0x65 0x63    
   \              0x2F 0x62    
   \              0x75 0x74    
   \   00000040   0x74 0x6F          DC8 74H, 6FH, 6EH, 20H, 50H, 55H, 53H, 48H
   \              0x6E 0x20    
   \              0x50 0x55    
   \              0x53 0x48    
   \   00000048   0x31 0x0D          DC8 31H, 0DH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_27:
   \   00000000   0x45 0x72          DC8 45H, 72H, 72H, 6FH, 72H, 20H, 64H, 75H
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x64 0x75    
   \   00000008   0x72 0x69          DC8 72H, 69H, 6EH, 67H, 20H, 42H, 6CH, 75H
   \              0x6E 0x67    
   \              0x20 0x42    
   \              0x6C 0x75    
   \   00000010   0x65 0x4E          DC8 65H, 4EH, 52H, 47H, 5FH, 53H, 74H, 61H
   \              0x52 0x47    
   \              0x5F 0x53    
   \              0x74 0x61    
   \   00000018   0x63 0x6B          DC8 63H, 6BH, 5FH, 49H, 6EH, 69H, 74H, 69H
   \              0x5F 0x49    
   \              0x6E 0x69    
   \              0x74 0x69    
   \   00000020   0x61 0x6C          DC8 61H, 6CH, 69H, 7AH, 61H, 74H, 69H, 6FH
   \              0x69 0x7A    
   \              0x61 0x74    
   \              0x69 0x6F    
   \   00000028   0x6E 0x28          DC8 6EH, 28H, 29H, 20H, 30H, 78H, 25H, 30H
   \              0x29 0x20    
   \              0x30 0x78    
   \              0x25 0x30    
   \   00000030   0x32 0x78          DC8 32H, 78H, 0DH, 0AH, 0
   \              0x0D 0x0A    
   \              0x00         
   \   00000035   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    217          
    218          #ifdef  USE_FULL_ASSERT
    219          
    220          /**
    221          * @brief  Reports the name of the source file and the source line number
    222          *         where the assert_param error has occurred.
    223          * @param  file: pointer to the source file name
    224          * @param  line: assert_param error line source number
    225          */
    226          void assert_failed(uint8_t* file, uint32_t line)
    227          { 
    228            /* User can add his own implementation to report the file name and line number,
    229            ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    230            
    231            /* Infinite loop */
    232            while (1)
    233            {
    234            }
    235          }
    236          
    237          #endif
    238          
    239          /**
    240            * @}
    241            */
    242          
    243          /**
    244            * @}
    245            */
    246          
    247          /**
    248            * @}
    249            */
    250          
    251          /******************* (C) COPYRIGHT 2015 STMicroelectronics *****END OF FILE****/
    252          
    253          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   HAL_VTimerTimeoutCallback
       8   help
         8   -> printf
      16   main
        16   -> BTLE_StackTick
        16   -> BlueNRG_Stack_Initialization
        16   -> HW_Config
        16   -> SdkEvalIdentification
        16   -> SdkEvalLedToggle
        16   -> SystemInit
        16   -> help
        16   -> noBlockingRead
        16   -> printf
        16   -> sleep
        16   -> sleep_timer
       8   printWakeupSource
         8   -> BlueNRG_WakeupSource
         8   -> printf
       8   sleep
         8   -> BlueNRG_Sleep
         8   -> printWakeupSource
         8   -> printf
       8   sleep_timer
         8   -> BTLE_StackTick
         8   -> BlueNRG_Sleep
         8   -> HAL_VTimerStart_ms
         8   -> HAL_VTimer_Stop
         8   -> printWakeupSource
         8   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable37
       4  ??DataTable37_1
       4  ??DataTable37_10
       4  ??DataTable37_11
       4  ??DataTable37_12
       4  ??DataTable37_13
       4  ??DataTable37_14
       4  ??DataTable37_15
       4  ??DataTable37_16
       4  ??DataTable37_17
       4  ??DataTable37_18
       4  ??DataTable37_19
       4  ??DataTable37_2
       4  ??DataTable37_20
       4  ??DataTable37_21
       4  ??DataTable37_22
       4  ??DataTable37_23
       4  ??DataTable37_24
       4  ??DataTable37_25
       4  ??DataTable37_26
       4  ??DataTable37_3
       4  ??DataTable37_4
       4  ??DataTable37_5
       4  ??DataTable37_6
       4  ??DataTable37_7
       4  ??DataTable37_8
       4  ??DataTable37_9
       4  ?_0
      64  ?_1
       8  ?_10
       8  ?_11
       8  ?_12
       8  ?_13
       8  ?_14
      16  ?_15
      16  ?_16
       8  ?_17
       8  ?_18
      16  ?_19
      76  ?_2
       8  ?_20
      20  ?_21
      20  ?_22
      44  ?_23
      32  ?_24
      44  ?_25
      36  ?_26
      56  ?_27
      16  ?_28
      32  ?_29
      24  ?_3
      24  ?_30
      20  ?_31
      36  ?_4
      28  ?_5
      32  ?_6
      32  ?_7
       8  ?_8
      20  ?_9
      52  BlueNRG_Stack_Init_params
       2  HAL_VTimerTimeoutCallback
    6436  dyn_alloc_a
      60  help
     162  main
     118  printWakeupSource
      38  sleep
      72  sleep_timer
    2048  stacklib_flash_data
      56  stacklib_stored_device_id_data

 
 6 436 bytes in section .noinit
 2 048 bytes in section .noinit.stacklib_flash_data
    56 bytes in section .noinit.stacklib_stored_device_id_data
   440 bytes in section .rodata
   952 bytes in section .text
 
   952 bytes of CODE  memory
   440 bytes of CONST memory
 8 540 bytes of DATA  memory

Errors: none
Warnings: none
