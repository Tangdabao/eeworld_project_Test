###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       29/Jan/2018  14:45:20
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Library\STM32L\Middlewares\ST\STM32_BlueNRG1\SimpleBlueNRG1_HCI\hci\controller\bluenrg1_l2cap_aci.c
#    Command line =  
#        "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Library\STM32L\Middlewares\ST\STM32_BlueNRG1\SimpleBlueNRG1_HCI\hci\controller\bluenrg1_l2cap_aci.c"
#        -D STM32L151xB -D STM32L1XX_XL -D USE_STM32L1XX_STEVAL_IDB00xV1 -D
#        USE_HAL_DRIVER -D HCLK_32MHZ=1 -D SYSCLK_MSI=1 -D ENABLE_USART -D
#        USER_DEFINED_PLATFORM=USER_EVAL_PLATFORM -D IRQ_RESET_PIN -D DTM_UART
#        -lC "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\DTM_UART\List"
#        -o "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\DTM_UART\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\Software\IAR_BlueNRG\arm\INC\c\DLib_Config_Normal.h -I
#        "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\..\inc\"
#        -I "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\..\..\..\..\Library\STM32L\Middlewares\ST\STM32_BlueNRG1\HAL\inc\"
#        -I "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\..\..\..\..\Library\STM32L\Drivers\BSP\STM32L1xx_BlueNRG1\inc\"
#        -I "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\..\..\..\..\Library\STM32L\Drivers\BSP\STM32L1xx_Nucleo\inc\"
#        -I "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\..\..\..\..\Library\STM32L\Drivers\CMSIS\Device\ST\STM32L1xx\Include\"
#        -I "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\..\..\..\..\Library\STM32L\Drivers\STM32L1xx_HAL_Driver\Inc\"
#        -I "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\..\..\..\..\Library\STM32L\Middlewares\ST\STM32_BlueNRG1\STM32L1xx_HAL_BlueNRG1_Drivers\inc\"
#        -I "C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\..\..\..\..\Library\STM32L\Middlewares\ST\STM32_BlueNRG1\SimpleBlueNRG1_HCI\includes\"
#        -On --use_c++_inline -I D:\Software\IAR_BlueNRG\arm\CMSIS\Include\
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\DTM_UART\List\bluenrg1_l2cap_aci.lst
#    Object file  =  
#        C:\Users\Administrator\Desktop\Temporary
#        Files\eeworld_project\Project_Test\Project\STM32L\DTM\EWARM\DTM_UART\Obj\bluenrg1_l2cap_aci.o
#
###############################################################################

C:\Users\Administrator\Desktop\Temporary Files\eeworld_project\Project_Test\Library\STM32L\Middlewares\ST\STM32_BlueNRG1\SimpleBlueNRG1_HCI\hci\controller\bluenrg1_l2cap_aci.c
      1          
      2          
      3          /**
      4            ******************************************************************************
      5            * @file    bluenrg1_l2cap_aci.c
      6            * @author  AMG - RF Application team
      7            * @version V1.0.0
      8            * @date    22 June 2017
      9            * @brief   Source file for external uC - BlueNRG-x in network coprocessor mode (l2cap_aci)
     10            *          Autogenerated files, do not edit!!
     11            ******************************************************************************
     12            * @attention
     13            *
     14            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     15            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     16            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     17            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     18            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     19            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     20            *
     21            * <h2><center>&copy; COPYRIGHT STMicroelectronics</center></h2>
     22            ******************************************************************************
     23            */
     24          #include "bluenrg1_l2cap_aci.h"
     25          #include "osal.h"

   \                                 In section .text, align 2, keep-with-next
     26          tBleStatus aci_l2cap_connection_parameter_update_req(uint16_t Connection_Handle,
     27                                                               uint16_t Conn_Interval_Min,
     28                                                               uint16_t Conn_Interval_Max,
     29                                                               uint16_t Slave_latency,
     30                                                               uint16_t Timeout_Multiplier)
     31          {
   \                     aci_l2cap_connection_parameter_update_req: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB0C8             SUB      SP,SP,#+288
   \   00000006   0x0005             MOVS     R5,R0
   \   00000008   0x000E             MOVS     R6,R1
   \   0000000A   0x0017             MOVS     R7,R2
   \   0000000C   0x4698             MOV      R8,R3
   \   0000000E   0x9C50             LDR      R4,[SP, #+320]
     32            struct hci_request rq;
     33            uint8_t cmd_buffer[258];
     34            aci_l2cap_connection_parameter_update_req_cp0 *cp0 = (aci_l2cap_connection_parameter_update_req_cp0*)(cmd_buffer);
   \   00000010   0xF10D 0x091C      ADD      R9,SP,#+28
     35            tBleStatus status = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF88D 0x0000      STRB     R0,[SP, #+0]
     36            uint8_t index_input = 0;
   \   0000001A   0xF05F 0x0A00      MOVS     R10,#+0
     37            cp0->Connection_Handle = htob(Connection_Handle, 2);
   \   0000001E   0xF8A9 0x5000      STRH     R5,[R9, #+0]
     38            index_input += 2;
   \   00000022   0xF11A 0x0A02      ADDS     R10,R10,#+2
     39            cp0->Conn_Interval_Min = htob(Conn_Interval_Min, 2);
   \   00000026   0xF8A9 0x6002      STRH     R6,[R9, #+2]
     40            index_input += 2;
   \   0000002A   0xF11A 0x0A02      ADDS     R10,R10,#+2
     41            cp0->Conn_Interval_Max = htob(Conn_Interval_Max, 2);
   \   0000002E   0xF8A9 0x7004      STRH     R7,[R9, #+4]
     42            index_input += 2;
   \   00000032   0xF11A 0x0A02      ADDS     R10,R10,#+2
     43            cp0->Slave_latency = htob(Slave_latency, 2);
   \   00000036   0xF8A9 0x8006      STRH     R8,[R9, #+6]
     44            index_input += 2;
   \   0000003A   0xF11A 0x0A02      ADDS     R10,R10,#+2
     45            cp0->Timeout_Multiplier = htob(Timeout_Multiplier, 2);
   \   0000003E   0xF8A9 0x4008      STRH     R4,[R9, #+8]
     46            index_input += 2;
   \   00000042   0xF11A 0x0A02      ADDS     R10,R10,#+2
     47            Osal_MemSet(&rq, 0, sizeof(rq));
   \   00000046   0x2218             MOVS     R2,#+24
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0xA801             ADD      R0,SP,#+4
   \   0000004C   0x.... 0x....      BL       Osal_MemSet
     48            rq.ogf = 0x3f;
   \   00000050   0x203F             MOVS     R0,#+63
   \   00000052   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     49            rq.ocf = 0x181;
   \   00000056   0xF240 0x1081      MOVW     R0,#+385
   \   0000005A   0xF8AD 0x0006      STRH     R0,[SP, #+6]
     50            rq.event = 0x0F;
   \   0000005E   0x200F             MOVS     R0,#+15
   \   00000060   0x9002             STR      R0,[SP, #+8]
     51            rq.cparam = cmd_buffer;
   \   00000062   0xA807             ADD      R0,SP,#+28
   \   00000064   0x9003             STR      R0,[SP, #+12]
     52            rq.clen = index_input;
   \   00000066   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000006A   0xF8CD 0xA010      STR      R10,[SP, #+16]
     53            rq.rparam = &status;
   \   0000006E   0x4668             MOV      R0,SP
   \   00000070   0x9005             STR      R0,[SP, #+20]
     54            rq.rlen = 1;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x9006             STR      R0,[SP, #+24]
     55            if (hci_send_req(&rq, FALSE) < 0)
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0xA801             ADD      R0,SP,#+4
   \   0000007A   0x.... 0x....      BL       hci_send_req
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD501             BPL.N    ??aci_l2cap_connection_parameter_update_req_0
     56              return BLE_STATUS_TIMEOUT;
   \   00000082   0x20FF             MOVS     R0,#+255
   \   00000084   0xE007             B.N      ??aci_l2cap_connection_parameter_update_req_1
     57            if (status) {
   \                     ??aci_l2cap_connection_parameter_update_req_0: (+1)
   \   00000086   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD002             BEQ.N    ??aci_l2cap_connection_parameter_update_req_2
     58              return status;
   \   0000008E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000092   0xE000             B.N      ??aci_l2cap_connection_parameter_update_req_1
     59            }
     60            return BLE_STATUS_SUCCESS;
   \                     ??aci_l2cap_connection_parameter_update_req_2: (+1)
   \   00000094   0x2000             MOVS     R0,#+0
   \                     ??aci_l2cap_connection_parameter_update_req_1: (+1)
   \   00000096   0xB048             ADD      SP,SP,#+288
   \   00000098   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
     61          }

   \                                 In section .text, align 2, keep-with-next
     62          tBleStatus aci_l2cap_connection_parameter_update_resp(uint16_t Connection_Handle,
     63                                                                uint16_t Conn_Interval_Min,
     64                                                                uint16_t Conn_Interval_Max,
     65                                                                uint16_t Slave_latency,
     66                                                                uint16_t Timeout_Multiplier,
     67                                                                uint16_t Minimum_CE_Length,
     68                                                                uint16_t Maximum_CE_Length,
     69                                                                uint8_t Identifier,
     70                                                                uint8_t Accept)
     71          {
   \                     aci_l2cap_connection_parameter_update_resp: (+1)
   \   00000000   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \   00000004   0xB0C8             SUB      SP,SP,#+288
   \   00000006   0x4699             MOV      R9,R3
   \   00000008   0x9C54             LDR      R4,[SP, #+336]
   \   0000000A   0x9D55             LDR      R5,[SP, #+340]
   \   0000000C   0x9E56             LDR      R6,[SP, #+344]
   \   0000000E   0x9F57             LDR      R7,[SP, #+348]
   \   00000010   0xF8DD 0x8160      LDR      R8,[SP, #+352]
     72            struct hci_request rq;
     73            uint8_t cmd_buffer[258];
     74            aci_l2cap_connection_parameter_update_resp_cp0 *cp0 = (aci_l2cap_connection_parameter_update_resp_cp0*)(cmd_buffer);
   \   00000014   0xF10D 0x0A1C      ADD      R10,SP,#+28
     75            tBleStatus status = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF88D 0x0000      STRB     R0,[SP, #+0]
     76            uint8_t index_input = 0;
   \   0000001E   0xF05F 0x0B00      MOVS     R11,#+0
     77            cp0->Connection_Handle = htob(Connection_Handle, 2);
   \   00000022   0xF8BD 0x0120      LDRH     R0,[SP, #+288]
   \   00000026   0xF8AA 0x0000      STRH     R0,[R10, #+0]
     78            index_input += 2;
   \   0000002A   0xF11B 0x0B02      ADDS     R11,R11,#+2
     79            cp0->Conn_Interval_Min = htob(Conn_Interval_Min, 2);
   \   0000002E   0xF8BD 0x0124      LDRH     R0,[SP, #+292]
   \   00000032   0xF8AA 0x0002      STRH     R0,[R10, #+2]
     80            index_input += 2;
   \   00000036   0xF11B 0x0B02      ADDS     R11,R11,#+2
     81            cp0->Conn_Interval_Max = htob(Conn_Interval_Max, 2);
   \   0000003A   0xF8BD 0x0128      LDRH     R0,[SP, #+296]
   \   0000003E   0xF8AA 0x0004      STRH     R0,[R10, #+4]
     82            index_input += 2;
   \   00000042   0xF11B 0x0B02      ADDS     R11,R11,#+2
     83            cp0->Slave_latency = htob(Slave_latency, 2);
   \   00000046   0xF8AA 0x9006      STRH     R9,[R10, #+6]
     84            index_input += 2;
   \   0000004A   0xF11B 0x0B02      ADDS     R11,R11,#+2
     85            cp0->Timeout_Multiplier = htob(Timeout_Multiplier, 2);
   \   0000004E   0xF8AA 0x4008      STRH     R4,[R10, #+8]
     86            index_input += 2;
   \   00000052   0xF11B 0x0B02      ADDS     R11,R11,#+2
     87            cp0->Minimum_CE_Length = htob(Minimum_CE_Length, 2);
   \   00000056   0xF8AA 0x500A      STRH     R5,[R10, #+10]
     88            index_input += 2;
   \   0000005A   0xF11B 0x0B02      ADDS     R11,R11,#+2
     89            cp0->Maximum_CE_Length = htob(Maximum_CE_Length, 2);
   \   0000005E   0xF8AA 0x600C      STRH     R6,[R10, #+12]
     90            index_input += 2;
   \   00000062   0xF11B 0x0B02      ADDS     R11,R11,#+2
     91            cp0->Identifier = htob(Identifier, 1);
   \   00000066   0xF88A 0x700E      STRB     R7,[R10, #+14]
     92            index_input += 1;
   \   0000006A   0xF11B 0x0B01      ADDS     R11,R11,#+1
     93            cp0->Accept = htob(Accept, 1);
   \   0000006E   0xF88A 0x800F      STRB     R8,[R10, #+15]
     94            index_input += 1;
   \   00000072   0xF11B 0x0B01      ADDS     R11,R11,#+1
     95            Osal_MemSet(&rq, 0, sizeof(rq));
   \   00000076   0x2218             MOVS     R2,#+24
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0xA801             ADD      R0,SP,#+4
   \   0000007C   0x.... 0x....      BL       Osal_MemSet
     96            rq.ogf = 0x3f;
   \   00000080   0x203F             MOVS     R0,#+63
   \   00000082   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     97            rq.ocf = 0x182;
   \   00000086   0xF44F 0x70C1      MOV      R0,#+386
   \   0000008A   0xF8AD 0x0006      STRH     R0,[SP, #+6]
     98            rq.cparam = cmd_buffer;
   \   0000008E   0xA807             ADD      R0,SP,#+28
   \   00000090   0x9003             STR      R0,[SP, #+12]
     99            rq.clen = index_input;
   \   00000092   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000096   0xF8CD 0xB010      STR      R11,[SP, #+16]
    100            rq.rparam = &status;
   \   0000009A   0x4668             MOV      R0,SP
   \   0000009C   0x9005             STR      R0,[SP, #+20]
    101            rq.rlen = 1;
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x9006             STR      R0,[SP, #+24]
    102            if (hci_send_req(&rq, FALSE) < 0)
   \   000000A2   0x2100             MOVS     R1,#+0
   \   000000A4   0xA801             ADD      R0,SP,#+4
   \   000000A6   0x.... 0x....      BL       hci_send_req
   \   000000AA   0x2800             CMP      R0,#+0
   \   000000AC   0xD501             BPL.N    ??aci_l2cap_connection_parameter_update_resp_0
    103              return BLE_STATUS_TIMEOUT;
   \   000000AE   0x20FF             MOVS     R0,#+255
   \   000000B0   0xE007             B.N      ??aci_l2cap_connection_parameter_update_resp_1
    104            if (status) {
   \                     ??aci_l2cap_connection_parameter_update_resp_0: (+1)
   \   000000B2   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000B6   0x2800             CMP      R0,#+0
   \   000000B8   0xD002             BEQ.N    ??aci_l2cap_connection_parameter_update_resp_2
    105              return status;
   \   000000BA   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000BE   0xE000             B.N      ??aci_l2cap_connection_parameter_update_resp_1
    106            }
    107            return BLE_STATUS_SUCCESS;
   \                     ??aci_l2cap_connection_parameter_update_resp_2: (+1)
   \   000000C0   0x2000             MOVS     R0,#+0
   \                     ??aci_l2cap_connection_parameter_update_resp_1: (+1)
   \   000000C2   0xB04B             ADD      SP,SP,#+300
   \   000000C4   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    108          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     320   aci_l2cap_connection_parameter_update_req
       320   -> Osal_MemSet
       320   -> hci_send_req
     336   aci_l2cap_connection_parameter_update_resp
       336   -> Osal_MemSet
       336   -> hci_send_req


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     156  aci_l2cap_connection_parameter_update_req
     200  aci_l2cap_connection_parameter_update_resp

 
 356 bytes in section .text
 
 356 bytes of CODE memory

Errors: none
Warnings: none
