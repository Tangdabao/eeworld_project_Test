###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       29/Nov/2017  10:11:19
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Library\BlueNRG1_Periph_Driver\src\BlueNRG1_rng.c
#    Command line =  
#        "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Library\BlueNRG1_Periph_Driver\src\BlueNRG1_rng.c" -D
#        HS_SPEED_XTAL=HS_SPEED_XTAL_16MHZ -D
#        LS_SOURCE=LS_SOURCE_EXTERNAL_32KHZ -D SMPS_INDUCTOR=SMPS_INDUCTOR_10uH
#        --preprocess=cl "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2
#        DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        -lCN "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        -lb "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List"
#        --diag_suppress Pe1665 -o "D:\Program Files
#        (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\Obj"
#        --debug --endian=little --cpu=Cortex-M0 --diag_warning Pe1665
#        --diag_suppress Pe1665 -e --fpu=None --dlib_config
#        D:\Software\IAR_BlueNRG\arm\INC\c\DLib_Config_Normal.h -I "D:\Program
#        Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\BlueNRG1_Periph_Driver\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\CMSIS\Device\ST\BlueNRG1\Include\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\SDK_Eval_BlueNRG1\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\CMSIS\Include\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\hal\inc\"
#        -I "D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\..\..\..\..\..\..\Library\Bluetooth_LE\inc\"
#        -Ohz
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\List\BlueNRG1_rng.lst
#    Object file  =  
#        D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK
#        2.5.0\Project\BlueNRG1_Periph_Examples\Micro\Sleep_Test\EWARM\BlueNRG-1\Release\Obj\BlueNRG1_rng.o
#
###############################################################################

D:\Program Files (x86)\STMicroelectronics\BlueNRG-1_2 DK 2.5.0\Library\BlueNRG1_Periph_Driver\src\BlueNRG1_rng.c
      1          /**
      2            ******************************************************************************
      3            * @file    BlueNRG1_RNG.c
      4            * @author  VMA Application Team
      5            * @version V2.0.0
      6            * @date    21-March-2016
      7            * @brief   This file provides all the RNG firmware functions.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "BlueNRG1_rng.h"
     24          
     25          
     26          /** @addtogroup BLUENRG1_Peripheral_Driver BLUENRG1 Peripheral Driver
     27            * @{
     28            */
     29          
     30          /** @defgroup RNG_Peripheral  RNG Peripheral
     31            * @{
     32            */
     33          
     34          /** @defgroup RNG_Private_TypesDefinitions Private Types Definitions
     35            * @{
     36            */
     37          
     38          /**
     39            * @}
     40            */
     41          
     42          /** @defgroup RNG_Private_Defines Private Defines
     43            * @{
     44            */
     45          
     46          
     47          /**
     48            * @}
     49            */ 
     50          
     51          /** @defgroup RNG_Private_Macros Private Macros
     52            * @{
     53            */
     54          
     55          /**
     56            * @}
     57            */
     58          
     59          /** @defgroup RNG_Private_Variables Private Variables
     60            * @{
     61            */
     62          
     63          /**
     64            * @}
     65            */
     66          
     67          /** @defgroup RNG_Private_FunctionPrototypes Private Function Prototypes
     68            * @{
     69            */
     70          
     71          /**
     72            * @}
     73            */
     74          
     75          /** @defgroup RNG_Private_Functions Private Functions
     76            * @{
     77            */
     78          
     79          /**
     80            * @}
     81            */
     82          	
     83          /** @defgroup RNG_Public_Functions Public Functions
     84          * @{
     85          */
     86          
     87          /**
     88            * @brief  Enables or disables the specified RNG peripheral.
     89            * @param  NewState: functional state @ref FunctionalState
     90            *         This parameter can be: ENABLE or DISABLE.
     91            * @retval None
     92            */

   \                                 In section .text, align 2, keep-with-next
     93          void RNG_Cmd(FunctionalState NewState)
     94          {
     95            /* Check the parameters */
     96            assert_param(IS_FUNCTIONAL_STATE(NewState));
     97            
     98            if (NewState != DISABLE) {
   \                     RNG_Cmd: (+1)
   \   00000000   0x21B0             MOVS     R1,#+176
   \   00000002   0x0609             LSLS     R1,R1,#+24       ;; #-1342177280
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0x6808             LDR      R0,[R1, #+0]
   \   00000008   0xD003             BEQ      ??RNG_Cmd_0
     99              /* Disable RNG peripheral */
    100              RNG->CR_b.DIS = RESET;
   \   0000000A   0x2204             MOVS     R2,#+4
   \   0000000C   0x4390             BICS     R0,R0,R2
   \   0000000E   0x6008             STR      R0,[R1, #+0]
   \   00000010   0x4770             BX       LR
    101            }
    102            else {
    103              /* Enable RNG peripheral */
    104              RNG->CR_b.DIS = SET;
   \                     ??RNG_Cmd_0: (+1)
   \   00000012   0x2204             MOVS     R2,#+4
   \   00000014   0x4302             ORRS     R2,R2,R0
   \   00000016   0x600A             STR      R2,[R1, #+0]
    105            }
    106          }
   \   00000018   0x4770             BX       LR               ;; return
    107          
    108          
    109          /**
    110            * @brief  Checks if the RNG flag is set or not.
    111          * @retval FlagStatus: functional state @ref FlagStatus
    112          *         This parameter can be: SET or RESET.
    113            */

   \                                 In section .text, align 2, keep-with-next
    114          FlagStatus RNG_GetFlagStatus(void)
    115          {  
    116            if (RNG->SR_b.RDY == SET) {
   \                     RNG_GetFlagStatus: (+1)
   \   00000000   0x....             LDR      R0,??DataTable0  ;; 0xb0000004
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x07C0             LSLS     R0,R0,#+31
   \   00000006   0x0FC0             LSRS     R0,R0,#+31
   \   00000008   0xD000             BEQ      ??RNG_GetFlagStatus_0
   \   0000000A   0x2001             MOVS     R0,#+1
    117              return SET;
    118            }
    119            else {
    120              return RESET;
   \                     ??RNG_GetFlagStatus_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
    121            }
    122            
    123          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0xB0000004         DC32     0xb0000004
    124          
    125          /**
    126            * @}
    127            */
    128          
    129          /**
    130            * @}
    131            */
    132          
    133          /**
    134            * @}
    135            */
    136          
    137          /******************* (C) COPYRIGHT 2016 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   RNG_Cmd
       0   RNG_GetFlagStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      26  RNG_Cmd
      14  RNG_GetFlagStatus

 
 44 bytes in section .text
 
 44 bytes of CODE memory

Errors: none
Warnings: none
